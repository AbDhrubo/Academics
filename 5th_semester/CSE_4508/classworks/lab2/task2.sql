CREATE OR REPLACE TRANSACTIONS (
    ID INT PRIMARY KEY,
    USER_ID INT,
    AMOUNT DECIMAL(10, 2),
    T_DATE DATE
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    1,
    1,
    1000000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    2,
    1,
    2000000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    3,
    2,
    300000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    4,
    2,
    200000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    5,
    3,
    2000000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    6,
    3,
    60000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    7,
    1,
    100000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    8,
    2,
    100000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    9,
    3,
    90000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

INSERT INTO TRANSACTIONS (
    ID,
    USER_ID,
    AMOUNT,
    T_DATE
) VALUES (
    10,
    3,
    10000,
    TO_DATE('2021-01-01', 'YYYY-MM-DD')
);

CREATE TABLE LOAN_TYPE (
    SCHEME INT PRIMARY KEY,
    INSTALLMENTS INT,
    SERVICE_CHARGE DECIMAL(5, 2),
    ELIGIBILITY DECIMAL(10, 2)
);

INSERT INTO LOAN_TYPE (
    SCHEME,
    INSTALLMENTS,
    SERVICE_CHARGE,
    ELIGIBILITY
) VALUES (
    1,
    30,
    5,
    2000000
);

INSERT INTO LOAN_TYPE (
    SCHEME,
    INSTALLMENTS,
    SERVICE_CHARGE,
    ELIGIBILITY
) VALUES (
    2,
    20,
    10,
    1000000
);

INSERT INTO LOAN_TYPE (
    SCHEME,
    INSTALLMENTS,
    SERVICE_CHARGE,
    ELIGIBILITY
) VALUES (
    3,
    15,
    15,
    500000
);

CREATE OR REPLACE FUNCTION GET_LOAN_SCHEME(
    P_USER_ID INT
) RETURN INT IS
    V_TOTAL_AMOUNT DECIMAL(10, 2) := 0;
    V_LOAN_SCHEME  INT := 0;
    CURSOR LOAN_CURSOR IS
    SELECT
        SCHEME,
        ELIGIBILITY
    FROM
        LOAN_TYPE
    ORDER BY
        ELIGIBILITY ASC;
BEGIN
    SELECT
        SUM(AMOUNT) INTO V_TOTAL_AMOUNT
    FROM
        TRANSACTIONS
    WHERE
        USER_ID = P_USER_ID;
    FOR LOAN_REC IN LOAN_CURSOR LOOP
        IF V_TOTAL_AMOUNT >= LOAN_REC.ELIGIBILITY THEN
            V_LOAN_SCHEME := LOAN_REC.SCHEME;
        END IF;
    END LOOP;

    RETURN V_LOAN_SCHEME;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN NULL;
        RETURN NULL;
END;

DECLARE
    V_SCHEME INT;
BEGIN
    V_SCHEME := GET_LOAN_SCHEME(1);
    DBMS_OUTPUT.PUT_LINE('Loan Scheme for User_ID 1: '
                         || V_SCHEME);
END;