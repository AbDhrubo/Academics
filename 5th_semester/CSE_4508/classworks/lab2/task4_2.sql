CREATE OR REPLACE PROCEDURE UPDATE_ACCOUNT_BALANCES AS
    CURSOR ACCOUNT_CURSOR IS
    SELECT
        A.ID                 AS ACC_ID,
        A.BALANCE,
        A.LASTDATEOFINTEREST,
        (
            SELECT
                AP.INTERESTRATE
            FROM
                ACCOUNTPROPERTIES AP
            WHERE
                AP.ID = A.ID
        ) AS INTERESTRATE,
        (
            SELECT
                AP.GP
            FROM
                ACCOUNTPROPERTIES AP
            WHERE
                AP.ID = A.ID
        ) AS GP
    FROM
        ACCOUNTS A;
    V_INTEREST_AMOUNT NUMBER;
    V_NEW_BALANCE     NUMBER;
    V_CURRENT_DATE    DATE := SYSDATE;
BEGIN
    FOR ACCOUNT_RECORD IN ACCOUNT_CURSOR LOOP
        CASE ACCOUNT_RECORD.GP
            WHEN 1 THEN
                V_INTEREST_AMOUNT := (ACCOUNT_RECORD.BALANCE * ACCOUNT_RECORD.INTERESTRATE / 100) *
                (V_CURRENT_DATE - ACCOUNT_RECORD.LASTDATEOFINTEREST);
                V_NEW_BALANCE := ACCOUNT_RECORD.BALANCE + V_INTEREST_AMOUNT;
            WHEN 2 THEN
                V_INTEREST_AMOUNT := (ACCOUNT_RECORD.BALANCE * ACCOUNT_RECORD.INTERESTRATE / 100) *
                (MONTHS_BETWEEN(V_CURRENT_DATE, ACCOUNT_RECORD.LASTDATEOFINTEREST));
                V_NEW_BALANCE := ACCOUNT_RECORD.BALANCE + V_INTEREST_AMOUNT;
            WHEN 3 THEN
                V_INTEREST_AMOUNT := (ACCOUNT_RECORD.BALANCE * ACCOUNT_RECORD.INTERESTRATE / 100) *
                (EXTRACT(YEAR FROM V_CURRENT_DATE) - EXTRACT(YEAR FROM ACCOUNT_RECORD.LASTDATEOFINTEREST));
                V_NEW_BALANCE := ACCOUNT_RECORD.BALANCE + V_INTEREST_AMOUNT;
            ELSE
                V_INTEREST_AMOUNT := 0;
                V_NEW_BALANCE := ACCOUNT_RECORD.BALANCE;
        END CASE;

        IF V_INTEREST_AMOUNT > 0 THEN
            UPDATE ACCOUNTS
            SET
                BALANCE = V_NEW_BALANCE,
                LASTDATEOFINTEREST = V_CURRENT_DATE
            WHERE
                ID = ACCOUNT_RECORD.ACC_ID;
        END IF;
    END LOOP;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END UPDATE_ACCOUNT_BALANCES;
/

BEGIN
    UPDATE_ACCOUNT_BALANCES;
END;
/